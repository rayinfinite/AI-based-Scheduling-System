spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME:scheduler}
    driverClassName: org.postgresql.Driver
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      max-lifetime: 300000
      connection-timeout: 5000
      validation-timeout: 5000
      keepalive-time: 300000
  jpa:
    hibernate:
      ddl-auto: update
    properties.hibernate.format_sql: true
  security.oauth2.client:
    provider:
      azure:
#        https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration
#        issuer-uri: https://login.microsoftonline.com/common/v2.0
        authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
        token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
        jwk-set-uri: https://login.microsoftonline.com/common/discovery/v2.0/keys
        user-info-uri: https://graph.microsoft.com/oidc/userinfo
        user-name-attribute: sub
    registration:
      azure:
        provider: azure
        client-id: ${AZURE_CLIENT_ID}
        client-secret: ${AZURE_SECRET}
        redirect-uri: "{baseUrl}/login/oauth2/code/"
        authorization-grant-type: authorization_code
        scope:
          - openid
          - profile
          - offline_access
success-url: http://localhost:9000
